peptide db for cascading search
{
    0 missed cleavages: [dbEntries],
    1 missed cleavages: [dbEntries],
    etc.
}

once spectra and fasta entries are sorted, can traverse both arrays at essentially the same time so that we don't need to do too much searching. could also discard the lower mass stuff once we pass it which would clear up memory as well

+----------+
| spectra  |
+----------+
   | | correlated search window between the two arrays
+----------+
|  fasta   |
+----------+

how to handle matches
Array where each index corresponds to spectrum. Each index has an object where the best score, fdr, and an array of matches is stored
[
    {
        best score
        fdr (for best score)
        idx of best match (out of matches)
        matches: [
            {
                minimallyModified/modified
                # missed cleavages
                index in database
                score
            }
        ]
    }
    {},
    etc.
]
  addMatch(index, modType, missedCleavages, fastaIndex, score, mzError) {
